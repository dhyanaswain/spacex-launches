{"version":3,"sources":["components/RocketLaunchDetails.js","rocket.gif","App.js","reportWebVitals.js","index.js"],"names":["RocketLaunchDetails","details","flight_number","mission_name","mission_id","launch_year","launch_success","links","rocket","imgSrc","mission_patch_small","land_success","first_stage","cores","Card","className","src","alt","API_BASE_URL","App","props","state","items","isLoaded","filters","limit","undefined","querystring","stringify","URL","this","getUpdatedApiUrl","setState","fetch","then","response","json","data","fetchAPI","type","value","uniqueLaunchYears","Array","fill","map","_","index","Container","fluid","Row","Col","xs","sm","md","lg","Body","Title","Text","year","Button","variant","toString","onClick","e","updateApiFilters","target","loader","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a12effbc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./RocketLaunchDetails.css\";\n\nfunction RocketLaunchDetails({ details }) {\n  const {\n    flight_number,\n    mission_name,\n    mission_id,\n    launch_year,\n    launch_success,\n    links,\n    rocket,\n  } = details;\n  const imgSrc = links.mission_patch_small;\n  const land_success = rocket.first_stage.cores[0].land_success;\n\n  return (\n    <Card className=\"Rocket-details-card\">\n      <div key={flight_number}>\n        <div>\n          <img\n            src={imgSrc}\n            alt=\"mission patch img not available on api\"\n            className=\"Rocket-mission-image\"\n          />\n        </div>\n        <div className=\"Rocket-mission-name-flight-number\">\n          {mission_name} #{flight_number}\n        </div>\n        <div className=\"Rocket-detail-label\">\n          Mission Ids:{\" \"}\n          <ul>\n            {\" \"}\n            <li className=\"Rocket-detail-value\">{mission_id}</li>\n          </ul>\n        </div>\n        <div className=\"Rocket-detail-label\">\n          Launch Year:{\" \"}\n          <span className=\"Rocket-detail-value\">{launch_year}</span>\n        </div>\n        <div className=\"Rocket-detail-label\">\n          Successful Launch:{\" \"}\n          <span className=\"Rocket-detail-value\">\n            {launch_success ? \"true\" : \"false\"}\n          </span>\n        </div>\n        <div className=\"Rocket-detail-label\">\n          Successful Landing:{\" \"}\n          <span className=\"Rocket-detail-value\">\n            {land_success ? \"true\" : \"false\"}\n          </span>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default RocketLaunchDetails;\n","export default __webpack_public_path__ + \"static/media/rocket.c5b8d3ef.gif\";","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport RocketLaunchDetails from './components/RocketLaunchDetails';\nimport querystring from 'querystring';\nimport './App.css';\nimport loader from './rocket.gif';\n\nconst API_BASE_URL = \"https://api.spacexdata.com/v3/launches?limit=100\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      filters: {\n        limit: 150,\n        launch_year: undefined,\n        launch_success: undefined,\n        land_success: undefined,\n      },\n    }\n\n  }\n\n  getUpdatedApiUrl(filters = {}) {\n    return API_BASE_URL + querystring.stringify({ ...filters });\n  }\n\n  fetchAPI(filters) {\n    const URL = this.getUpdatedApiUrl(filters);\n    this.setState({ isLoaded: false, filters });\n    fetch(URL)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          isLoaded: true,\n          data\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchAPI(this.state.filters);\n  }\n\n  updateApiFilters(type, value) {\n    // if same value is clicked, we remove that filter\n    if (this.state.filters[type] === value) {\n      value = undefined;\n    }\n\n    const filters = {\n      ...this.state.filters,\n      [type]: value,\n    };\n\n    this.fetchAPI(filters);\n  }\n\n\n  render() {\n\n    const { isLoaded, data } = this.state;\n    const uniqueLaunchYears = new Array(16).fill(0).map((_, index) => 2006 + index);\n\n    if (!isLoaded) {\n      return <div className=\"App-loader-container\">\n        <div className=\"App-loader-box\">\n          <img src={loader} alt=\"loading...\" />\n        </div>\n      </div>\n    }\n\n    else {\n\n      return (\n        <div className=\"App\">\n          <h1 className=\"App-header\">SpaceX Launch Programs</h1>\n          <Container fluid>\n            <Row>\n              <Col xs={12} sm={12} md={6} lg={3}>\n                <Card className=\"App-filter-card\">\n                  <Card.Body>\n                    <Card.Title className=\"App-filter-header\">\n                      Filters\n                    </Card.Title>\n                    <Card.Text className=\"App-filter-heading-launch-year\">\n                      Launch Year\n                      <hr className=\"App-filters-hr\" />\n                    </Card.Text>\n\n                    <Row>\n                      <div className=\"App-filter-button-container\">\n                        {uniqueLaunchYears.map((year) => {\n                          return (\n                            <Button\n                              className=\"App-filter-button\"\n                              variant={\n                                this.state.filters.launch_year ===\n                                year.toString()\n                                  ? \"success\"\n                                  : \"outline-success\"\n                              }\n                              value={year}\n                              onClick={(e) =>\n                                this.updateApiFilters(\n                                  \"launch_year\",\n                                  e.target.value\n                                )\n                              }\n                            >\n                              {year}\n                            </Button>\n                          );\n                        })}\n                      </div>\n                    </Row>\n\n                    <Card.Text className=\"App-filter-heading\">\n                      Successful Launch\n                      <hr className=\"App-filters-hr\" />\n                    </Card.Text>\n\n                    <div className=\"App-filter-button-container\">\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.filters.launch_success === \"true\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\n                            \"launch_success\",\n                            e.target.value\n                          )\n                        }\n                        value=\"true\"\n                      >\n                        True\n                      </Button>\n\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.filters.launch_success === \"false\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\n                            \"launch_success\",\n                            e.target.value\n                          )\n                        }\n                        value=\"false\"\n                      >\n                        False\n                      </Button>\n                    </div>\n\n                    <Card.Text className=\"App-filter-heading\">\n                      Successful Landing\n                      <hr className=\"App-filters-hr\" />\n                    </Card.Text>\n                    <div className=\"App-filter-button-container\">\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.filters.land_success === \"true\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\"land_success\", e.target.value)\n                        }\n                        value=\"true\"\n                      >\n                        True\n                      </Button>\n\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.filters.land_success === \"false\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\"land_success\", e.target.value)\n                        }\n                        value=\"false\"\n                      >\n                        False\n                      </Button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n\n              <Col xs={12} sm={12} md={6} lg={9}>\n                <Row>\n                  {data.map((details) => {\n                    return (\n                      <Col md={12} lg={4}>\n                        <RocketLaunchDetails details={details} />\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}